rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check a user's role within their organization
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Users Collection:
    // Users can read their own profile.
    // Users can update their own 'name' and 'email'.
    // Admins can update the 'role' of any user within their own organization.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name', 'email']);
      
      // Admin role update logic
      allow update: if request.auth != null && 
                     getUserRole(request.auth.uid) == 'Admin' &&
                     resource.data.orgId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.orgId &&
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role']);
    }

    // Billing Collection:
    // Only Admins can view or modify billing information for their organization.
    match /billing/{docId} {
      allow read, write: if request.auth != null && 
                          getUserRole(request.auth.uid) == 'Admin' &&
                          resource.data.orgId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.orgId;
    }

    // AI Lab Collection:
    // Authenticated users who are part of an organization can create AI content.
    // Users can only read AI content that belongs to their organization.
    match /aiLab/{aiLabId} {
      allow create: if request.auth != null && request.resource.data.orgId != null;
      allow read: if request.auth != null && 
                   resource.data.orgId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.orgId;
    }
    
    // Content Collection (Assuming similar logic to aiLab)
    match /content/{contentId} {
       allow create: if request.auth != null && request.resource.data.orgId != null;
       allow read, update, delete: if request.auth != null && 
                   resource.data.orgId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.orgId;
    }
  }
}